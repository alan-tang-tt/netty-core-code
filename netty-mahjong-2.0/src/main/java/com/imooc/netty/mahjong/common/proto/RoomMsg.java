// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mahjong.proto

package com.imooc.netty.mahjong.common.proto;

/**
 * Protobuf type {@code RoomMsg}
 */
public  final class RoomMsg extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:RoomMsg)
    RoomMsgOrBuilder {
  // Use RoomMsg.newBuilder() to construct.
  private RoomMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RoomMsg() {
    id_ = 0L;
    maxPlayerNum_ = 0;
    baseScore_ = 0;
    players_ = java.util.Collections.emptyList();
    remainCards_ = com.google.protobuf.ByteString.EMPTY;
    chuPos_ = 0;
    status_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RoomMsg(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            id_ = input.readInt64();
            break;
          }
          case 16: {

            maxPlayerNum_ = input.readInt32();
            break;
          }
          case 24: {

            baseScore_ = input.readInt32();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              players_ = new java.util.ArrayList<com.imooc.netty.mahjong.common.proto.PlayerMsg>();
              mutable_bitField0_ |= 0x00000008;
            }
            players_.add(
                input.readMessage(com.imooc.netty.mahjong.common.proto.PlayerMsg.parser(), extensionRegistry));
            break;
          }
          case 42: {

            remainCards_ = input.readBytes();
            break;
          }
          case 48: {

            chuPos_ = input.readInt32();
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        players_ = java.util.Collections.unmodifiableList(players_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.imooc.netty.mahjong.common.proto.Mahjong.internal_static_RoomMsg_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.imooc.netty.mahjong.common.proto.Mahjong.internal_static_RoomMsg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.imooc.netty.mahjong.common.proto.RoomMsg.class, com.imooc.netty.mahjong.common.proto.RoomMsg.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   **
   * 房间id
   * </pre>
   *
   * <code>optional int64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int MAXPLAYERNUM_FIELD_NUMBER = 2;
  private int maxPlayerNum_;
  /**
   * <pre>
   **
   * 房间最大的人数
   * </pre>
   *
   * <code>optional int32 maxPlayerNum = 2;</code>
   */
  public int getMaxPlayerNum() {
    return maxPlayerNum_;
  }

  public static final int BASESCORE_FIELD_NUMBER = 3;
  private int baseScore_;
  /**
   * <pre>
   **
   * 底分
   * </pre>
   *
   * <code>optional int32 baseScore = 3;</code>
   */
  public int getBaseScore() {
    return baseScore_;
  }

  public static final int PLAYERS_FIELD_NUMBER = 4;
  private java.util.List<com.imooc.netty.mahjong.common.proto.PlayerMsg> players_;
  /**
   * <pre>
   **
   * 房间内的玩家列表
   * </pre>
   *
   * <code>repeated .PlayerMsg players = 4;</code>
   */
  public java.util.List<com.imooc.netty.mahjong.common.proto.PlayerMsg> getPlayersList() {
    return players_;
  }
  /**
   * <pre>
   **
   * 房间内的玩家列表
   * </pre>
   *
   * <code>repeated .PlayerMsg players = 4;</code>
   */
  public java.util.List<? extends com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder> 
      getPlayersOrBuilderList() {
    return players_;
  }
  /**
   * <pre>
   **
   * 房间内的玩家列表
   * </pre>
   *
   * <code>repeated .PlayerMsg players = 4;</code>
   */
  public int getPlayersCount() {
    return players_.size();
  }
  /**
   * <pre>
   **
   * 房间内的玩家列表
   * </pre>
   *
   * <code>repeated .PlayerMsg players = 4;</code>
   */
  public com.imooc.netty.mahjong.common.proto.PlayerMsg getPlayers(int index) {
    return players_.get(index);
  }
  /**
   * <pre>
   **
   * 房间内的玩家列表
   * </pre>
   *
   * <code>repeated .PlayerMsg players = 4;</code>
   */
  public com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder getPlayersOrBuilder(
      int index) {
    return players_.get(index);
  }

  public static final int REMAINCARDS_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString remainCards_;
  /**
   * <pre>
   **
   * 未摸的牌
   * </pre>
   *
   * <code>optional bytes remainCards = 5;</code>
   */
  public com.google.protobuf.ByteString getRemainCards() {
    return remainCards_;
  }

  public static final int CHUPOS_FIELD_NUMBER = 6;
  private int chuPos_;
  /**
   * <pre>
   **
   * 出牌玩家的位置
   * </pre>
   *
   * <code>optional int32 chuPos = 6;</code>
   */
  public int getChuPos() {
    return chuPos_;
  }

  public static final int STATUS_FIELD_NUMBER = 7;
  private int status_;
  /**
   * <pre>
   **
   * 状态
   * </pre>
   *
   * <code>optional .RoomStatus status = 7;</code>
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   **
   * 状态
   * </pre>
   *
   * <code>optional .RoomStatus status = 7;</code>
   */
  public com.imooc.netty.mahjong.common.proto.RoomStatus getStatus() {
    com.imooc.netty.mahjong.common.proto.RoomStatus result = com.imooc.netty.mahjong.common.proto.RoomStatus.valueOf(status_);
    return result == null ? com.imooc.netty.mahjong.common.proto.RoomStatus.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0L) {
      output.writeInt64(1, id_);
    }
    if (maxPlayerNum_ != 0) {
      output.writeInt32(2, maxPlayerNum_);
    }
    if (baseScore_ != 0) {
      output.writeInt32(3, baseScore_);
    }
    for (int i = 0; i < players_.size(); i++) {
      output.writeMessage(4, players_.get(i));
    }
    if (!remainCards_.isEmpty()) {
      output.writeBytes(5, remainCards_);
    }
    if (chuPos_ != 0) {
      output.writeInt32(6, chuPos_);
    }
    if (status_ != com.imooc.netty.mahjong.common.proto.RoomStatus.STATUS_WAITING_PLAYER.getNumber()) {
      output.writeEnum(7, status_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, id_);
    }
    if (maxPlayerNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maxPlayerNum_);
    }
    if (baseScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, baseScore_);
    }
    for (int i = 0; i < players_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, players_.get(i));
    }
    if (!remainCards_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, remainCards_);
    }
    if (chuPos_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, chuPos_);
    }
    if (status_ != com.imooc.netty.mahjong.common.proto.RoomStatus.STATUS_WAITING_PLAYER.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, status_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.imooc.netty.mahjong.common.proto.RoomMsg)) {
      return super.equals(obj);
    }
    com.imooc.netty.mahjong.common.proto.RoomMsg other = (com.imooc.netty.mahjong.common.proto.RoomMsg) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && (getMaxPlayerNum()
        == other.getMaxPlayerNum());
    result = result && (getBaseScore()
        == other.getBaseScore());
    result = result && getPlayersList()
        .equals(other.getPlayersList());
    result = result && getRemainCards()
        .equals(other.getRemainCards());
    result = result && (getChuPos()
        == other.getChuPos());
    result = result && status_ == other.status_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getId());
    hash = (37 * hash) + MAXPLAYERNUM_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPlayerNum();
    hash = (37 * hash) + BASESCORE_FIELD_NUMBER;
    hash = (53 * hash) + getBaseScore();
    if (getPlayersCount() > 0) {
      hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + getPlayersList().hashCode();
    }
    hash = (37 * hash) + REMAINCARDS_FIELD_NUMBER;
    hash = (53 * hash) + getRemainCards().hashCode();
    hash = (37 * hash) + CHUPOS_FIELD_NUMBER;
    hash = (53 * hash) + getChuPos();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.imooc.netty.mahjong.common.proto.RoomMsg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.imooc.netty.mahjong.common.proto.RoomMsg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code RoomMsg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:RoomMsg)
      com.imooc.netty.mahjong.common.proto.RoomMsgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.imooc.netty.mahjong.common.proto.Mahjong.internal_static_RoomMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.imooc.netty.mahjong.common.proto.Mahjong.internal_static_RoomMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.imooc.netty.mahjong.common.proto.RoomMsg.class, com.imooc.netty.mahjong.common.proto.RoomMsg.Builder.class);
    }

    // Construct using com.imooc.netty.mahjong.common.proto.RoomMsg.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPlayersFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;

      maxPlayerNum_ = 0;

      baseScore_ = 0;

      if (playersBuilder_ == null) {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        playersBuilder_.clear();
      }
      remainCards_ = com.google.protobuf.ByteString.EMPTY;

      chuPos_ = 0;

      status_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.imooc.netty.mahjong.common.proto.Mahjong.internal_static_RoomMsg_descriptor;
    }

    public com.imooc.netty.mahjong.common.proto.RoomMsg getDefaultInstanceForType() {
      return com.imooc.netty.mahjong.common.proto.RoomMsg.getDefaultInstance();
    }

    public com.imooc.netty.mahjong.common.proto.RoomMsg build() {
      com.imooc.netty.mahjong.common.proto.RoomMsg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.imooc.netty.mahjong.common.proto.RoomMsg buildPartial() {
      com.imooc.netty.mahjong.common.proto.RoomMsg result = new com.imooc.netty.mahjong.common.proto.RoomMsg(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      result.maxPlayerNum_ = maxPlayerNum_;
      result.baseScore_ = baseScore_;
      if (playersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.players_ = players_;
      } else {
        result.players_ = playersBuilder_.build();
      }
      result.remainCards_ = remainCards_;
      result.chuPos_ = chuPos_;
      result.status_ = status_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.imooc.netty.mahjong.common.proto.RoomMsg) {
        return mergeFrom((com.imooc.netty.mahjong.common.proto.RoomMsg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.imooc.netty.mahjong.common.proto.RoomMsg other) {
      if (other == com.imooc.netty.mahjong.common.proto.RoomMsg.getDefaultInstance()) return this;
      if (other.getId() != 0L) {
        setId(other.getId());
      }
      if (other.getMaxPlayerNum() != 0) {
        setMaxPlayerNum(other.getMaxPlayerNum());
      }
      if (other.getBaseScore() != 0) {
        setBaseScore(other.getBaseScore());
      }
      if (playersBuilder_ == null) {
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
      } else {
        if (!other.players_.isEmpty()) {
          if (playersBuilder_.isEmpty()) {
            playersBuilder_.dispose();
            playersBuilder_ = null;
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000008);
            playersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPlayersFieldBuilder() : null;
          } else {
            playersBuilder_.addAllMessages(other.players_);
          }
        }
      }
      if (other.getRemainCards() != com.google.protobuf.ByteString.EMPTY) {
        setRemainCards(other.getRemainCards());
      }
      if (other.getChuPos() != 0) {
        setChuPos(other.getChuPos());
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.imooc.netty.mahjong.common.proto.RoomMsg parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.imooc.netty.mahjong.common.proto.RoomMsg) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     **
     * 房间id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     **
     * 房间id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public Builder setId(long value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 房间id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = 0L;
      onChanged();
      return this;
    }

    private int maxPlayerNum_ ;
    /**
     * <pre>
     **
     * 房间最大的人数
     * </pre>
     *
     * <code>optional int32 maxPlayerNum = 2;</code>
     */
    public int getMaxPlayerNum() {
      return maxPlayerNum_;
    }
    /**
     * <pre>
     **
     * 房间最大的人数
     * </pre>
     *
     * <code>optional int32 maxPlayerNum = 2;</code>
     */
    public Builder setMaxPlayerNum(int value) {
      
      maxPlayerNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 房间最大的人数
     * </pre>
     *
     * <code>optional int32 maxPlayerNum = 2;</code>
     */
    public Builder clearMaxPlayerNum() {
      
      maxPlayerNum_ = 0;
      onChanged();
      return this;
    }

    private int baseScore_ ;
    /**
     * <pre>
     **
     * 底分
     * </pre>
     *
     * <code>optional int32 baseScore = 3;</code>
     */
    public int getBaseScore() {
      return baseScore_;
    }
    /**
     * <pre>
     **
     * 底分
     * </pre>
     *
     * <code>optional int32 baseScore = 3;</code>
     */
    public Builder setBaseScore(int value) {
      
      baseScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 底分
     * </pre>
     *
     * <code>optional int32 baseScore = 3;</code>
     */
    public Builder clearBaseScore() {
      
      baseScore_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.imooc.netty.mahjong.common.proto.PlayerMsg> players_ =
      java.util.Collections.emptyList();
    private void ensurePlayersIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        players_ = new java.util.ArrayList<com.imooc.netty.mahjong.common.proto.PlayerMsg>(players_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.imooc.netty.mahjong.common.proto.PlayerMsg, com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder, com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder> playersBuilder_;

    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public java.util.List<com.imooc.netty.mahjong.common.proto.PlayerMsg> getPlayersList() {
      if (playersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(players_);
      } else {
        return playersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public int getPlayersCount() {
      if (playersBuilder_ == null) {
        return players_.size();
      } else {
        return playersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public com.imooc.netty.mahjong.common.proto.PlayerMsg getPlayers(int index) {
      if (playersBuilder_ == null) {
        return players_.get(index);
      } else {
        return playersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder setPlayers(
        int index, com.imooc.netty.mahjong.common.proto.PlayerMsg value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
      } else {
        playersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder setPlayers(
        int index, com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.set(index, builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder addPlayers(com.imooc.netty.mahjong.common.proto.PlayerMsg value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
      } else {
        playersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder addPlayers(
        int index, com.imooc.netty.mahjong.common.proto.PlayerMsg value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.add(index, value);
        onChanged();
      } else {
        playersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder addPlayers(
        com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.add(builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder addPlayers(
        int index, com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.add(index, builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder addAllPlayers(
        java.lang.Iterable<? extends com.imooc.netty.mahjong.common.proto.PlayerMsg> values) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
      } else {
        playersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder clearPlayers() {
      if (playersBuilder_ == null) {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        playersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public Builder removePlayers(int index) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.remove(index);
        onChanged();
      } else {
        playersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder getPlayersBuilder(
        int index) {
      return getPlayersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder getPlayersOrBuilder(
        int index) {
      if (playersBuilder_ == null) {
        return players_.get(index);  } else {
        return playersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public java.util.List<? extends com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder> 
         getPlayersOrBuilderList() {
      if (playersBuilder_ != null) {
        return playersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(players_);
      }
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder addPlayersBuilder() {
      return getPlayersFieldBuilder().addBuilder(
          com.imooc.netty.mahjong.common.proto.PlayerMsg.getDefaultInstance());
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder addPlayersBuilder(
        int index) {
      return getPlayersFieldBuilder().addBuilder(
          index, com.imooc.netty.mahjong.common.proto.PlayerMsg.getDefaultInstance());
    }
    /**
     * <pre>
     **
     * 房间内的玩家列表
     * </pre>
     *
     * <code>repeated .PlayerMsg players = 4;</code>
     */
    public java.util.List<com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder> 
         getPlayersBuilderList() {
      return getPlayersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.imooc.netty.mahjong.common.proto.PlayerMsg, com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder, com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder> 
        getPlayersFieldBuilder() {
      if (playersBuilder_ == null) {
        playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.imooc.netty.mahjong.common.proto.PlayerMsg, com.imooc.netty.mahjong.common.proto.PlayerMsg.Builder, com.imooc.netty.mahjong.common.proto.PlayerMsgOrBuilder>(
                players_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        players_ = null;
      }
      return playersBuilder_;
    }

    private com.google.protobuf.ByteString remainCards_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     **
     * 未摸的牌
     * </pre>
     *
     * <code>optional bytes remainCards = 5;</code>
     */
    public com.google.protobuf.ByteString getRemainCards() {
      return remainCards_;
    }
    /**
     * <pre>
     **
     * 未摸的牌
     * </pre>
     *
     * <code>optional bytes remainCards = 5;</code>
     */
    public Builder setRemainCards(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      remainCards_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 未摸的牌
     * </pre>
     *
     * <code>optional bytes remainCards = 5;</code>
     */
    public Builder clearRemainCards() {
      
      remainCards_ = getDefaultInstance().getRemainCards();
      onChanged();
      return this;
    }

    private int chuPos_ ;
    /**
     * <pre>
     **
     * 出牌玩家的位置
     * </pre>
     *
     * <code>optional int32 chuPos = 6;</code>
     */
    public int getChuPos() {
      return chuPos_;
    }
    /**
     * <pre>
     **
     * 出牌玩家的位置
     * </pre>
     *
     * <code>optional int32 chuPos = 6;</code>
     */
    public Builder setChuPos(int value) {
      
      chuPos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 出牌玩家的位置
     * </pre>
     *
     * <code>optional int32 chuPos = 6;</code>
     */
    public Builder clearChuPos() {
      
      chuPos_ = 0;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     * <pre>
     **
     * 状态
     * </pre>
     *
     * <code>optional .RoomStatus status = 7;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     **
     * 状态
     * </pre>
     *
     * <code>optional .RoomStatus status = 7;</code>
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 状态
     * </pre>
     *
     * <code>optional .RoomStatus status = 7;</code>
     */
    public com.imooc.netty.mahjong.common.proto.RoomStatus getStatus() {
      com.imooc.netty.mahjong.common.proto.RoomStatus result = com.imooc.netty.mahjong.common.proto.RoomStatus.valueOf(status_);
      return result == null ? com.imooc.netty.mahjong.common.proto.RoomStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     **
     * 状态
     * </pre>
     *
     * <code>optional .RoomStatus status = 7;</code>
     */
    public Builder setStatus(com.imooc.netty.mahjong.common.proto.RoomStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * 状态
     * </pre>
     *
     * <code>optional .RoomStatus status = 7;</code>
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:RoomMsg)
  }

  // @@protoc_insertion_point(class_scope:RoomMsg)
  private static final com.imooc.netty.mahjong.common.proto.RoomMsg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.imooc.netty.mahjong.common.proto.RoomMsg();
  }

  public static com.imooc.netty.mahjong.common.proto.RoomMsg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RoomMsg>
      PARSER = new com.google.protobuf.AbstractParser<RoomMsg>() {
    public RoomMsg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomMsg(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RoomMsg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RoomMsg> getParserForType() {
    return PARSER;
  }

  public com.imooc.netty.mahjong.common.proto.RoomMsg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

